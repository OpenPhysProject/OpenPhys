<div class="lesson-content">
    <div class="lesson-content-title"><%- title %></div>
    <div class="lesson-content-body">
        <div class="col-xs-12 col-sm-6">
                This is a demo of using https://threejs.org/ 3D graphics library
        </div>

    <style>
    canvas { width: 50%; height: 300; border:1px solid #FF0000;}
    </style>

    <canvas id="myCanvas">Your browser does not support the HTML5 canvas tag.</canvas>

<script>
    var camera, scene, renderer, geometry, material, mesh;
	var shiftIT = 0;
    init();
    animate();

    function init() {
	// CAMERA
        scene  = new THREE.Scene();
		var FOV_deg = 80;
        var displayWidth = window.innerWidth / 2; // sets the canvas size
        var displayHeight = window.innerHeight/2;

        aspect = displayWidth / displayHeight;
        camera = new THREE.PerspectiveCamera( FOV_deg, aspect, 1, 10000 );
        camera.position.x = 0;
        camera.position.z = 1000;
	// MESH
        //geometry = new THREE.BoxGeometry( 800, 200, 200 );
	var cylinderRadius = 15;
	var cylinderHeight = 500;
	speed = -0.1 * Math.PI / 2;
	nSpins = 5; //17;
	geometry = new THREE.CylinderGeometry( cylinderRadius/2, cylinderRadius, cylinderHeight, 10 );
    material = new THREE.MeshBasicMaterial( { color: 0xf0f000, wireframe: false } );

	meshs = [];
	for (i=0; i<nSpins; i++){
            meshTmp = new THREE.Mesh( geometry, material );
            meshTmp.position.y = cylinderHeight/2;
            scene.add( meshTmp );
            meshs.push(meshTmp);
	}
	// RENDER
        // was:
        // renderer = new THREE.WebGLRenderer();
        // renderer.setSize( displayWidth, displayHeight );
        // document.body.appendChild( renderer.domElement ); // this is not a good way.
        renderer = new THREE.WebGLRenderer( { canvas: myCanvas } );
        renderer.setSize( displayWidth, displayHeight );
    }

    function animate() {
        requestAnimationFrame( animate );
        render();
    }

    function render() {
        // https://stackoverflow.com/questions/44287255/whats-the-right-way-to-rotate-an-object-around-a-point-in-three-js
        var matrixA = new THREE.Matrix4();  //Create a matrix
        var matrixB = new THREE.Matrix4();  //Create a matrix
        //var speeds = [1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0];

        var factor = -nSpins/20;  // so that the central spin does not rotate (is on resonance)
        for (i=0; i<nSpins; i++){
                factor += 0.1 ;
                matrixA.makeRotationZ(speed*factor);
                //matrix.makeRotationY(Math.PI/200);
                meshs[i].position.applyMatrix4(matrixA); // needs to be applied each time.

				if (shiftIT < nSpins) {
					//meshs[i].position.applyMatrix4(matrixA);
					console.log(matrixA);
					//meshs[i].position.applyMatrix4(matrixB);  // Translate, but it keeps moving
					shiftIT += 1;
				}
                meshs[i].rotation.z += speed*factor;

                //meshs[i].rotation.y += Math.PI/200;
        }
        //console.log(mesh1.rotation.z)
        if ( Math.abs(meshs[0].rotation.z) > Math.PI *0.9 )
        {speed = -speed;
        } // 180deg pulse, sort of.

        camera.position.z +=0;
        renderer.render( scene, camera );
    }
</script>

    </div>
    <div class="lesson-content-footer"><%- number %>  <%- group %></div>
</div>
